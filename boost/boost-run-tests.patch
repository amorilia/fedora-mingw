*** tools/regression/run_tests.sh.orig	2007-07-31 19:44:25.000000000 -0500
--- tools/regression/run_tests.sh	2007-08-01 12:17:25.000000000 -0500
***************
*** 15,21 ****
  # This can be either a non-exitent directory or an already complete Boost
  # source tree.
  #
! boost_root="$HOME/CVSROOTs/Boost/boost_regression"
  
  #
  # Wether to fetch the most current Boost code from CVS (yes/no):
--- 15,21 ----
  # This can be either a non-exitent directory or an already complete Boost
  # source tree.
  #
! boost_root="/usr/src/redhat/BUILD/boost_1_34_1"
  
  #
  # Wether to fetch the most current Boost code from CVS (yes/no):
*************** test_tools=gcc
*** 42,58 ****
  toolset=gcc
  
  #
- # "comment_path" is the path to an html-file describing the test environment.
- # The content of this file will be embedded in the status pages being produced.
- #
- comment_path="$boost_root/../regression_comment.html"
- #
  # "test_dir" is the relative path to the directory to run the tests in,
  # defaults to "status" and runs all the tests, but could be a sub-directory
  # for example "libs/regex/test" to run the regex tests alone.
  #
  test_dir="status"
  
  
  ### DEFAULTS ARE OK FOR THESE.
  
--- 42,59 ----
  toolset=gcc
  
  #
  # "test_dir" is the relative path to the directory to run the tests in,
  # defaults to "status" and runs all the tests, but could be a sub-directory
  # for example "libs/regex/test" to run the regex tests alone.
  #
  test_dir="status"
  
+ #
+ # "comment_path" is the path to an html-file describing the test environment.
+ # The content of this file will be embedded in the status pages being produced.
+ #
+ comment_path="$boost_root/$test_dir/regression_comment.html"
+ 
  
  ### DEFAULTS ARE OK FOR THESE.
  
*************** exe_suffix=
*** 71,76 ****
--- 72,80 ----
  #
  bjam="$boost_root/tools/jam/src/bin/bjam$exe_suffix"
  
+ # bjam options
+ bjam_flags="--layout=system variant=release -sICU_PATH=/usr --user-config=$boost_root/user-config.jam"
+ 
  #
  # "process_jam_log", and "compiler_status" paths to built helper programs:
  # The location of the executables of the regression help programs. These
*************** else
*** 98,103 ****
--- 102,115 ----
  fi
  export BOOST_BUILD_PATH
  
+ # For shared objects.
+ old_ld_library_path=$LD_LIBRARY_PATH
+ old_ld_run_path=$LD_RUN_PATH
+ LD_LIBRARY_PATH="$boost_root/stage/lib:$old_ld_library_path"
+ LD_RUN_PATH="$boost_root/stage/lib:$old_ld_run_path"
+ export LD_LIBRARY_PATH
+ export LD_RUN_PATH
+ 
  #
  # STEP 0:
  #
*************** fi
*** 126,137 ****
  # STEP 1:
  # rebuild bjam if required:
  #
! echo building bjam:
! cd "$boost_root/tools/jam/src" && \
! LOCATE_TARGET=bin sh ./build.sh
! if test $? != 0 ; then
!     echo "bjam build failed."
!     exit 256
  fi
  
  #
--- 138,152 ----
  # STEP 1:
  # rebuild bjam if required:
  #
! echo "finding or building bjam":
! if test ! -f "$bjam" ; then
!   echo "building bjam":
!     cd "$boost_root/tools/jam/src" && \
!     LOCATE_TARGET=bin sh ./build.sh
!     if test $? != 0 ; then
!       echo "bjam build failed."
!       exit 256
!     fi
  fi
  
  #
*************** fi
*** 139,146 ****
  # rebuild the regression test helper programs if required:
  #
  echo building regression test helper programs:
! cd "$boost_root/tools/regression/build" && \
! "$bjam" $toolset release
  if test $? != 0 ; then
      echo "helper program build failed."
      exit 256
--- 154,160 ----
  # rebuild the regression test helper programs if required:
  #
  echo building regression test helper programs:
! cd "$boost_root/tools/regression/build" && "$bjam" $bjam_flags $toolset
  if test $? != 0 ; then
      echo "helper program build failed."
      exit 256
*************** for tool in $test_tools ; do
*** 158,164 ****
  #
  echo running the $tool regression tests:
  cd "$boost_root/$test_dir"
! "$bjam" $tool --dump-tests 2>&1 | tee regress.log
  
  #
  # STEP 4:
--- 172,180 ----
  #
  echo running the $tool regression tests:
  cd "$boost_root/$test_dir"
! echo "<p> begin time: " `date` "</p>" >> "$comment_path"
! "$bjam" $bjam_flags $tool --dump-tests 2>&1 | tee regress.log
! echo "<p> end time: " `date` "</p>" >> "$comment_path"
  
  #
  # STEP 4:
*************** if test $? != 0 ; then
*** 185,190 ****
--- 201,212 ----
      exit 256
  fi
  
+ # cleanup
+ LD_LIBRARY_PATH="$old_ld_library_path"
+ LD_RUN_PATH="$old_ld_run_path"
+ export LD_LIBRARY_PATH
+ export LD_RUN_PATH
+ 
  echo "done!"
  
  
