--- SDL-1.2.10/src/video/ps2gs/SDL_gsyuv.c.pagesize	2006-05-17 05:16:07.000000000 +0200
+++ SDL-1.2.10/src/video/ps2gs/SDL_gsyuv.c	2006-05-22 16:15:46.000000000 +0200
@@ -27,7 +27,8 @@
 #include <unistd.h>
 #include <sys/ioctl.h>
 #include <sys/mman.h>
-#include <asm/page.h>		/* For definition of PAGE_SIZE */
+/* There is no PAGE_SIZE define anymore, use sysconf from unistd.h instead */
+#include <unistd.h>
 
 #include "SDL_video.h"
 #include "SDL_gsyuv_c.h"
@@ -180,7 +181,7 @@
 
 	/* Allocate a DMA area for pixel conversion */
 	bpp = this->screen->format->BytesPerPixel;
-	map_offset = (mapped_len + (PAGE_SIZE - 1)) & ~(PAGE_SIZE - 1);
+	map_offset = (mapped_len + ((int)sysconf(_SC_PAGE_SIZE) - 1)) & ~((int)sysconf(_SC_PAGE_SIZE) - 1);
 	hwdata->dma_len = hwdata->macroblocks * (16 * 16 + 8 * 8 + 8 * 8) +
 	                  width * height * bpp +
 	                  hwdata->macroblocks * (16 * sizeof(long long)) +
--- SDL-1.2.10/src/video/Xext/Xxf86dga/XF86DGA.c.pagesize	2006-05-01 10:02:47.000000000 +0200
+++ SDL-1.2.10/src/video/Xext/Xxf86dga/XF86DGA.c	2006-05-22 16:15:25.000000000 +0200
@@ -18,7 +18,6 @@
 #define HAS_MMAP_ANON
 #include <sys/types.h>
 #include <sys/mman.h>
-#include <asm/page.h>   /* PAGE_SIZE */
 #define HAS_SC_PAGESIZE /* _SC_PAGESIZE may be an enum for Linux */
 #define HAS_GETPAGESIZE
 #endif /* linux */
@@ -491,10 +490,6 @@
     if (pagesize == -1)
 	pagesize = getpagesize();
 #endif
-#ifdef PAGE_SIZE
-    if (pagesize == -1)
-	pagesize = PAGE_SIZE;
-#endif
     if (pagesize == -1)
 	pagesize = 4096;
 
--- SDL-1.2.10/src/video/fbcon/SDL_fbvideo.c.pagesize	2006-05-17 05:16:07.000000000 +0200
+++ SDL-1.2.10/src/video/fbcon/SDL_fbvideo.c	2006-05-22 16:16:05.000000000 +0200
@@ -29,7 +29,8 @@
 #include <unistd.h>
 #include <sys/ioctl.h>
 #include <sys/mman.h>
-#include <asm/page.h>		/* For definition of PAGE_SIZE */
+/* There is no PAGE_SIZE define anymore, use sysconf from unistd.h instead */
+#include <unistd.h>
 #include <linux/vt.h>
 
 #include "SDL_video.h"
@@ -547,7 +548,7 @@
 
 	/* Memory map the device, compensating for buggy PPC mmap() */
 	mapped_offset = (((long)finfo.smem_start) -
-	                (((long)finfo.smem_start)&~(PAGE_SIZE-1)));
+			 (((long)finfo.smem_start)&~((int)sysconf(_SC_PAGE_SIZE)-1)));
 	mapped_memlen = finfo.smem_len+mapped_offset;
 	mapped_mem = do_mmap(NULL, mapped_memlen,
 	                  PROT_READ|PROT_WRITE, MAP_SHARED, console_fd, 0);
